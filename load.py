from charset_normalizer import from_path
from bs4 import BeautifulSoup, NavigableString, Comment # üëà –î–æ–±–∞–≤–ª–µ–Ω Comment
import re, unicodedata, html
from pathlib import Path
from markdownify import markdownify as mdify

# ‚Äî –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ‚Äî
def _clean(txt: str) -> str:
    txt = unicodedata.normalize("NFC", html.unescape(txt))
    return re.sub(r"\n{2,}", "\n", txt).strip()

def _html_to_md_with_imgs(soup: BeautifulSoup) -> str:
    for img in soup.find_all("img", src=True):
        img.replace_with(NavigableString(f"![{img.get('alt', '')}]({img['src']})"))
    return mdify(str(soup), heading_style="ATX")

# ‚Äî üî• –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –ü–ê–†–°–ï–†–ê ‚Äî
def load_zoom_section_v3_optimized(path: str) -> dict:
    # 1) –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    results = from_path(path)
    best_match = results.best()
    if not best_match:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
        with open(path, 'r', encoding='utf-8', errors='replace') as f:
            raw_html = f.read()
    else:
        raw_html = best_match.output(encoding=best_match.encoding)

    # 2) –ï–¥–∏–Ω—ã–π —Ä–∞–∑–±–æ—Ä BeautifulSoup
    soup = BeautifulSoup(raw_html, "html.parser")

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ (–º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —á—É—Ç—å –∫–æ—Ä–æ—á–µ —Å CSS-—Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º)
    title_tag = soup.select_one("#printheader h1, #idheader h1")
    title = title_tag.get_text(strip=True) if title_tag else soup.title.get_text(strip=True)

    # 3) üî• –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –º–µ–∂–¥—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ —á–µ—Ä–µ–∑ BeautifulSoup
    zoom_soup = BeautifulSoup('<html><body></body></html>', 'html.parser') # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Å—É–ø –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    body = zoom_soup.body

    # –ò—â–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    start_comment = soup.find(string=lambda text: isinstance(text, Comment) and "ZOOMRESTART" in text)
    
    if start_comment:
        # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ –≤—Å–µ–º —Å–ª–µ–¥—É—é—â–∏–º —ç–ª–µ–º–µ–Ω—Ç–∞–º
        for sibling in start_comment.find_all_next():
            # –ï—Å–ª–∏ –¥–æ—à–ª–∏ –¥–æ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è
            if isinstance(sibling, Comment) and "ZOOMSTOP" in sibling:
                break
            # –ö–æ–ø–∏—Ä—É–µ–º —Ç–µ–≥ –≤ –Ω–∞—à –Ω–æ–≤—ã–π —Å—É–ø
            if sibling.name: # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Ç–µ–≥, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∞
                 body.append(sibling)

    text_md = _clean(_html_to_md_with_imgs(zoom_soup))

    return {
        "title":   title,
        "text":    text_md,
        "source":  str(path),
    }